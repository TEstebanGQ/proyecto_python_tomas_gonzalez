import json
import os
from tabulate import tabulate
from utils.screenControllers import limpiar_pantalla, pausar_pantalla
from models.elemento import Elemento
from utils.validata import validar_valoracion, obtener_entrada_valida, validar_solo_letras

DATA_PATH = "data/musica.json"
os.makedirs("data", exist_ok=True)

def cargar_musica():
    if os.path.exists(DATA_PATH):
        with open(DATA_PATH, "r", encoding="utf-8") as archivo:
            return json.load(archivo)
    return []

def guardar_musica(musica):
    with open(DATA_PATH, "w", encoding="utf-8") as archivo:
        json.dump(musica, archivo, indent=4, ensure_ascii=False)

def mostrar_musica():
    musica = cargar_musica()
    if not musica:
        print("No hay canciones registradas.")
    else:
        print(tabulate(musica, headers="keys", tablefmt="grid"))

def agregar_musica():
    limpiar_pantalla()
    musica = cargar_musica()

    titulo = input("T√≠tulo de la canci√≥n: ").strip()
    while titulo == "":
        print("‚ùå El t√≠tulo no puede estar vac√≠o.")
        titulo = input("T√≠tulo de la canci√≥n: ").strip()

    artista = validar_solo_letras("Artista")
    genero = validar_solo_letras("G√©nero musical")
    valoracion = validar_valoracion()

    nueva_cancion = {
        "titulo": titulo,
        "artista": artista,
        "genero": genero,
        "valoracion": valoracion
    }
    musica.append(nueva_cancion)
    guardar_musica(musica)
    print("‚úÖ Canci√≥n agregada correctamente.")
    pausar_pantalla()

def eliminar_musica():
    musica = cargar_musica()
    if not musica:
        print("No hay canciones registradas.")
        pausar_pantalla()
        return
        
    mostrar_musica()
    
    try:
        indice = int(input("N√∫mero de la canci√≥n a eliminar: ")) - 1
        if 0 <= indice < len(musica):
            cancion_eliminada = musica.pop(indice)
            guardar_musica(musica)
            print(f"‚úÖ Canci√≥n '{cancion_eliminada['titulo']}' eliminada.")
        else:
            print("‚ùå √çndice no v√°lido.")
    except ValueError:
        print("‚ùå Debe ingresar un n√∫mero v√°lido.")
    
    pausar_pantalla()

# FUNCIONES PARA LA COLECCI√ìN UNIFICADA
def listar_musica(coleccion):
    """Lista la m√∫sica de la colecci√≥n unificada"""
    musica = [elem for elem in coleccion if elem.tipo == 'm√∫sica']
    
    if not musica:
        print("üéµ No hay m√∫sica en la colecci√≥n.")
        pausar_pantalla()
        return
    
    # Preparar datos para tabulate
    datos_tabla = []
    for cancion in musica:
        valoracion_str = f"{cancion.valoracion}/10" if cancion.valoracion else "Sin valorar"
        datos_tabla.append({
            'ID': cancion.id,
            'T√≠tulo': cancion.titulo,
            'Artista': cancion.autor_director_artista,
            'G√©nero': cancion.genero,
            'Valoraci√≥n': valoracion_str,
            'Fecha': cancion.fecha_agregado.split()[0]
        })
    
    print(f"üéµ M√öSICA EN LA COLECCI√ìN ({len(musica)})")
    print("=" * 80)
    print(tabulate(datos_tabla, headers="keys", tablefmt="grid"))
    print(f"\nTotal de canciones: {len(musica)}")
    pausar_pantalla()

def crear_musica(coleccion, gestor_archivos):
    """Crea una nueva canci√≥n en la colecci√≥n unificada"""
    limpiar_pantalla()
    print("=== AGREGAR NUEVA CANCI√ìN ===")
    print("-" * 40)
    
    # Obtener datos de la canci√≥n
    titulo = obtener_entrada_valida("T√≠tulo de la canci√≥n: ")
    artista = obtener_entrada_valida("Artista: ")
    genero = obtener_entrada_valida("G√©nero musical: ")
    
    # Solicitar valoraci√≥n
    while True:
        valoracion_input = input("Valoraci√≥n (1-10, opcional - presiona Enter para omitir): ")
        if not valoracion_input.strip():
            valoracion = None
            break
        
        valoracion = validar_valoracion(valoracion_input)
        if valoracion is not False:
            break
    
    # Crear el elemento
    cancion = Elemento(titulo, artista, genero, valoracion, "m√∫sica")
    coleccion.append(cancion)
    
    # Guardar la colecci√≥n
    if gestor_archivos.guardar_coleccion(coleccion):
        print(f"‚úÖ Canci√≥n '{titulo}' agregada exitosamente.")
        print(f"üéµ ID asignado: {cancion.id}")
    else:
        print("‚ùå Error al guardar la canci√≥n.")
        coleccion.remove(cancion)
    
    pausar_pantalla()